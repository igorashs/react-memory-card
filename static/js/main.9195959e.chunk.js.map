{"version":3,"sources":["shared/Layout.js","GameHeader/Logo/eevee-logo.png","GameHeader/Logo/Logo.js","GameHeader/Scoreboard/Scoreboard.js","GameHeader/GameHeader.js","GameBoard/Card/Card.js","GameBoard/GameBoard.js","shared/Loading/pikaSpinner.svg","shared/Loading/Loading.js","GameOver/GameOver.js","shared/Status/Status.js","lib/CardsCollection.js","useGame/useLvl.js","useGame/useGame.js","useGame/useKnownCards.js","useGame/useCards.js","useGame/useScore.js","App.js","index.js"],"names":["Wrapper","styled","div","Modal","StyledLogo","Logo","src","logo","alt","StyledBoard","Score","p","BestScore","Divider","Scoreboard","score","bestScore","StyledHeader","header","GameHeader","appear","keyframes","StyledCard","animation","css","Card","props","useState","toAnimate","setToAnimate","card","name","onCardClick","animate","id","useEffect","timeout","setTimeout","clearTimeout","onClick","draggable","StyledMain","main","GameBoard","cards","setAnimate","handleCardClick","prev","map","spin","pulse","LoadingModal","Loading","text","show","spinner","GameOverModal","Button","button","GameOver","onNewGameClick","Text","h2","Status","pokedex","Pokedex","fetchCardsImgs","Promise","all","resolve","img","Image","onload","shuffleCards","prevCards","r","max","length","shuffled","i","Math","floor","random","splice","getCards","quantity","start","getRandomizedInterval","MAX","getRandomizedStart","ids","getPokemonByName","fetchCardsWithIDS","end","push","getIDSFromInterval","CardsCollection","getCardsBriefInfo","a","brief","sprites","other","front_default","INITIAL","cardsCount","nr","useGame","isLoading","setIsLoading","isGameOver","setIsGameOver","knownCards","setKnownCards","find","cardId","count","useKnownCards","hasCardWithId","addCardWithId","knowsAllCards","resetKnownCards","setCards","newCards","useCards","updateCards","lvl","setLvl","prevLvl","useLvl","nextLvl","resetLvl","setScore","setBestScore","points","prevScore","useScore","updateScore","resetScore","App","startLvl","handleCardChoice","startNewGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9195959e.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: var(--secondary);\n  color: var(--primary-text);\n`;\n\nexport const Modal = styled.div`\n  min-width: 100vw;\n  min-height: 100vh;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  background: var(--primary);\n`;\n","export default __webpack_public_path__ + \"static/media/eevee-logo.d4558f95.png\";","import styled from 'styled-components';\nimport logo from './eevee-logo.png';\n\nconst StyledLogo = styled.div`\n  width: 80px;\n  height: 80px;\n  padding: 4px;\n  min-height: 50px;\n  min-width: 50px;\n`;\n\nexport function Logo() {\n  return (\n    <StyledLogo>\n      <img src={logo} alt='Poke Logo' />\n    </StyledLogo>\n  );\n}\n","import styled from 'styled-components';\n\nconst StyledBoard = styled.div`\n  padding: 5px;\n  flex: 1 1 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Score = styled.p`\n  color: rgb(188 255 152);\n  padding: 5px;\n  font-size: 20px;\n\n  @media (min-width: 576px) {\n    font-size: 24px;\n  }\n`;\n\nconst BestScore = styled(Score)`\n  color: rgb(255 152 152);\n`;\n\nconst Divider = styled.div`\n  height: 24px;\n  width: 1px;\n  background-color: white;\n  margin: 0 10px;\n`;\n\nexport function Scoreboard({ score, bestScore }) {\n  return (\n    <StyledBoard>\n      <Score>Score: {score}</Score>\n      <Divider />\n      <BestScore>Best: {bestScore}</BestScore>\n    </StyledBoard>\n  );\n}\n","import styled from 'styled-components';\nimport { Logo } from './Logo';\nimport { Scoreboard } from './Scoreboard';\n\nconst StyledHeader = styled.header`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: center;\n  min-height: 60px;\n  background-color: var(--primary);\n\n  h1 {\n    font-size: 28px;\n  }\n`;\n\nexport function GameHeader({ score, bestScore }) {\n  return (\n    <StyledHeader>\n      <Logo />\n      <h1>PokeMemory!</h1>\n      <Scoreboard score={score} bestScore={bestScore} />\n    </StyledHeader>\n  );\n}\n","import styled, { keyframes, css } from 'styled-components';\nimport { useState, useEffect } from 'react';\n\nconst DURATION = 400;\n\nconst appear = keyframes`\n  0% {\n    transform: scale(0);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`;\n\nconst StyledCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 5px;\n  min-width: 60px;\n  position: relative;\n\n  border-radius: 5px;\n  border: 3px solid rgb(43 56 41);\n  background-color: rgb(64 81 62);\n  box-shadow: 0px 1px 4px #585858;\n  transition: all 200ms;\n\n  overflow: hidden;\n  cursor: pointer;\n\n  ${({ animation }) =>\n    animation &&\n    css`\n      animation: ${appear} ${DURATION}ms 1;\n    `}\n\n  img {\n    width: 200px;\n    height: 200px;\n  }\n\n  h3 {\n    font-size: 24px;\n    padding: 0 5px;\n    user-select: none;\n  }\n\n  img {\n    width: 100px;\n    height: 100px;\n  }\n\n  h3 {\n    font-size: 16px;\n  }\n\n  @media (min-width: 992px) {\n    img {\n      min-width: 160px;\n      min-height: 160px;\n    }\n\n    h3 {\n      font-size: 20px;\n    }\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n\n  @media (min-width: 576px) {\n    img {\n      width: 120px;\n      height: 120px;\n    }\n  }\n`;\n\nconst Divider = styled.div`\n  width: 100%;\n  background-color: #333;\n  height: 1px;\n`;\n\nexport function Card(props) {\n  const [toAnimate, setToAnimate] = useState();\n\n  const { card, alt = card.name, onCardClick, animate } = props;\n  const { name, src, id } = card;\n\n  useEffect(() => {\n    setToAnimate(true);\n    const timeout = setTimeout(() => {\n      setToAnimate(false);\n    }, DURATION);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [animate]);\n\n  return (\n    <StyledCard onClick={() => onCardClick(id)} animation={toAnimate}>\n      <img src={src} alt={alt} draggable='false' />\n      <Divider />\n      <h3>{name}</h3>\n    </StyledCard>\n  );\n}\n","import styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { Card } from './Card';\n\nconst StyledMain = styled.main`\n  flex: 1 1 auto;\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst StyledBoard = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: flex-start;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: 1rem;\n`;\n\nexport function GameBoard({ cards, onCardClick }) {\n  const [animate, setAnimate] = useState();\n\n  useEffect(() => {}, [animate]);\n\n  const handleCardClick = (id) => {\n    setAnimate((prev) => !prev);\n    onCardClick(id);\n  };\n\n  return (\n    <StyledMain>\n      <StyledBoard>\n        {cards &&\n          cards.map((card) => (\n            <Card\n              key={card.id}\n              card={card}\n              onCardClick={handleCardClick}\n              animate={animate}\n            />\n          ))}\n      </StyledBoard>\n    </StyledMain>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/pikaSpinner.20e5d35b.svg\";","import styled, { keyframes } from 'styled-components';\nimport spinner from './pikaSpinner.svg';\nimport { Modal } from '../Layout';\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst pulse = keyframes`\n  from {\n    transform: scale(1);\n  }\n\n  to {\n    transform: scale(1.2);\n  }\n`;\n\nconst LoadingModal = styled(Modal)`\n  img {\n    width: 60px;\n    animation: ${spin} 500ms linear infinite;\n  }\n\n  p {\n    font-size: 20px;\n    text-align: center;\n    animation: ${pulse} 500ms alternate infinite;\n  }\n\n  @media (min-width: 576px) {\n    img {\n      width: 100px;\n    }\n\n    p {\n      font-size: 28px;\n    }\n  }\n\n  z-index: 2021;\n`;\n\nexport function Loading({ text, show }) {\n  return (\n    show && (\n      <LoadingModal>\n        <img src={spinner} alt='spinner' />\n        {text && <p>{text}</p>}\n      </LoadingModal>\n    )\n  );\n}\n","import styled from 'styled-components';\nimport { Modal } from '../shared/Layout';\n\nconst GameOverModal = styled(Modal)`\n  p {\n    font-size: 20px;\n    text-align: center;\n  }\n\n  h2 {\n    font-size: 28px;\n  }\n\n  @media (min-width: 576px) {\n    p {\n      font-size: 30px;\n    }\n\n    h2 {\n      font-size: 44px;\n    }\n  }\n\n  z-index: 2021;\n`;\n\nconst Button = styled.button`\n  margin-top: 20px;\n  color: var(--primary-text);\n  background-color: var(--secondary);\n  padding: 5px 12px;\n  font-size: 18px;\n  border: 0;\n  border-radius: 4px;\n\n  :hover {\n    background-color: rgb(70 77 90);\n  }\n\n  @media (min-width: 576px) {\n    font-size: 24px;\n  }\n`;\n\nexport function GameOver({ score, onNewGameClick, show }) {\n  return (\n    show && (\n      <GameOverModal>\n        <h2>Game Over!</h2>\n        <p>Congratulations your Score is {score}</p>\n        <Button onClick={onNewGameClick}>New Game</Button>\n      </GameOverModal>\n    )\n  );\n}\n","import styled from 'styled-components';\n\nconst Text = styled.h2`\n  margin-top: 1rem;\n  text-decoration: underline;\n  text-align: center;\n  font-size: 20px;\n\n  @media (min-width: 576px) {\n    font-size: 24px;\n  }\n`;\n\nexport function Status({ text }) {\n  return <Text>{text}</Text>;\n}\n","import { Pokedex } from 'pokeapi-js-wrapper';\n\nconst pokedex = new Pokedex();\n\n// Pokemons Interval IDS\nconst MIN = 1;\nconst MAX = 898;\n\n// get random start between [1 - 898] (inclusive)\nconst getRandomizedStart = (quantity) =>\n  Math.floor(Math.random() * (MAX - MIN - quantity + 2)) + MIN;\n\n// get start and end interval\nconst getRandomizedInterval = (quantity, start) => [start, quantity + start];\n\n// get ids from interval\nconst getIDSFromInterval = (start, end) => {\n  let ids = [];\n\n  for (let i = start; i < end; i++) {\n    ids.push(i);\n  }\n\n  return ids;\n};\n\n// fetch cards with ids\nconst fetchCardsWithIDS = (ids) =>\n  Promise.all(ids.map((id) => pokedex.getPokemonByName(id)));\n\n// fetch src imgs\n// preload!\nconst fetchCardsImgs = (cards) =>\n  Promise.all(\n    cards.map(\n      ({ src }) =>\n        new Promise((resolve) => {\n          const img = new Image();\n          img.src = src;\n\n          img.onload = () => resolve(src);\n        })\n    )\n  );\n\n// get random number from 0 to max not included\nconst getRandomIndex = (max) => Math.floor(Math.random() * max);\n\n// shuffle the cards;\nconst shuffleCards = (prevCards) => {\n  let cards = [...prevCards];\n  const length = cards.length;\n  let shuffled = [];\n  let r;\n\n  for (let i = 0; i < length; i += 1) {\n    r = getRandomIndex(cards.length);\n    shuffled = [...shuffled, ...cards.splice(r, 1)];\n  }\n\n  return shuffled;\n};\n\n// fetch a specific amount of cards\nconst getCards = (quantity) => {\n  const [start, end] = getRandomizedInterval(\n    quantity,\n    getRandomizedStart(quantity)\n  );\n  const ids = getIDSFromInterval(start, end);\n  const cards = fetchCardsWithIDS(ids);\n\n  return cards;\n};\n\n// fetch a specific amount of cards with a brief information\n// name and img\nconst getCardsBriefInfo = async (quantity) => {\n  const cards = await getCards(quantity);\n\n  const brief = cards.map((card) => ({\n    id: card.id,\n    name: card.name,\n    src: card.sprites.other['official-artwork'].front_default\n  }));\n\n  await fetchCardsImgs(brief);\n  const shuffled = shuffleCards(brief);\n\n  return shuffled;\n};\n\nconst CardsCollection = {\n  getCardsBriefInfo,\n  shuffleCards\n};\n\nexport { CardsCollection as default };\n","import { useState } from 'react';\n\nconst CARDS_STEP = 2;\nconst MAX_CARDS = 12;\nconst INITIAL = { cardsCount: 4, nr: 1 };\n\nexport const useLvl = () => {\n  const [lvl, setLvl] = useState(INITIAL);\n\n  const nextLvl = () => {\n    setLvl((prevLvl) => {\n      let cardsCount =\n        prevLvl.cardsCount < MAX_CARDS\n          ? prevLvl.cardsCount + CARDS_STEP\n          : MAX_CARDS;\n      let nr = prevLvl.nr + 1;\n\n      return { cardsCount, nr };\n    });\n  };\n\n  const resetLvl = () => {\n    setLvl({ ...INITIAL });\n  };\n\n  return [lvl, nextLvl, resetLvl];\n};\n","import { useState } from 'react';\nimport { useCards } from './useCards';\nimport { useLvl } from './useLvl';\nimport { useKnownCards } from './useKnownCards';\nimport { useScore } from './useScore';\n\nexport const useGame = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [\n    hasCardWithId,\n    addCardWithId,\n    knowsAllCards,\n    resetKnownCards\n  ] = useKnownCards();\n  const [cards, shuffleCards, updateCards] = useCards();\n  const [lvl, nextLvl, resetLvl] = useLvl();\n  const [score, bestScore, updateScore, resetScore] = useScore();\n\n  const startLvl = async () => {\n    await updateCards(lvl.cardsCount);\n    setIsLoading(false);\n  };\n\n  const handleCardChoice = (id) => {\n    if (!hasCardWithId(id)) {\n      addCardWithId(id);\n      updateScore(1);\n\n      //check player progress for next lvl\n      if (knowsAllCards(lvl.cardsCount)) {\n        resetKnownCards();\n        setIsLoading(true);\n        nextLvl();\n      } else {\n        shuffleCards();\n      }\n    } else {\n      setIsGameOver(true);\n    }\n  };\n\n  const startNewGame = () => {\n    setIsGameOver(false);\n    setIsLoading(true);\n    resetKnownCards();\n    resetScore();\n    resetLvl();\n  };\n\n  return [\n    lvl,\n    isLoading,\n    isGameOver,\n    cards,\n    score,\n    bestScore,\n    startLvl,\n    handleCardChoice,\n    startNewGame\n  ];\n};\n","import { useState } from 'react';\n\nexport const useKnownCards = () => {\n  const [knownCards, setKnownCards] = useState([]);\n\n  const hasCardWithId = (id) =>\n    knownCards.find((cardId) => cardId === id) ? true : false;\n\n  const addCardWithId = (id) => {\n    setKnownCards((prev) => {\n      let knownCards = [...prev];\n      knownCards.push(id);\n\n      return knownCards;\n    });\n  };\n\n  const knowsAllCards = (count) => knownCards.length === count - 1;\n\n  const resetKnownCards = () => {\n    setKnownCards([]);\n  };\n\n  return [hasCardWithId, addCardWithId, knowsAllCards, resetKnownCards];\n};\n","import { useState } from 'react';\nimport CardsCollection from '../lib/CardsCollection';\n\nexport const useCards = () => {\n  const [cards, setCards] = useState(null);\n\n  const shuffleCards = () => {\n    setCards((prevCards) => CardsCollection.shuffleCards(prevCards));\n  };\n\n  const updateCards = async (count) => {\n    const newCards = await CardsCollection.getCardsBriefInfo(count);\n    setCards(newCards);\n  };\n\n  return [cards, shuffleCards, updateCards];\n};\n","import { useState } from 'react';\n\nexport const useScore = () => {\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n\n  const resetScore = () => {\n    setScore(0);\n  };\n\n  const updateScore = (points) => {\n    setScore((prevScore) => {\n      const score = prevScore + points;\n\n      if (score > bestScore) {\n        setBestScore(score);\n      }\n\n      return score;\n    });\n  };\n\n  return [score, bestScore, updateScore, resetScore];\n};\n","import { useEffect } from 'react';\nimport { Wrapper } from './shared/Layout';\nimport { GameHeader } from './GameHeader';\nimport { GameBoard } from './GameBoard';\nimport { Loading } from './shared/Loading';\nimport { GameOver } from './GameOver';\nimport { Status } from './shared/Status';\nimport { useGame } from './useGame';\n\nexport default function App() {\n  const [\n    lvl,\n    isLoading,\n    isGameOver,\n    cards,\n    score,\n    bestScore,\n    startLvl,\n    handleCardChoice,\n    startNewGame\n  ] = useGame();\n\n  useEffect(async () => {\n    await startLvl();\n  }, [lvl]);\n\n  return (\n    <Wrapper>\n      <Loading text={`Loading Lvl ${lvl.nr}`} show={isLoading} />\n      <GameOver score={score} onNewGameClick={startNewGame} show={isGameOver} />\n      <GameHeader score={score} bestScore={bestScore} />\n      <Status text={`Choose your next Pokemon! Lvl ${lvl.nr}`} />\n      <GameBoard cards={cards} onCardClick={handleCardChoice} />\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}