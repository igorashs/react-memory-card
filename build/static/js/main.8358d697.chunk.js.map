{"version":3,"sources":["lib/CardsCollection.js","components/Layout/Layout.js","components/Layout/Header/Header.js","components/Layout/Header/index.js","components/Layout/Main/Main.js","components/Layout/Main/index.js","components/Layout/Logo/Logo.js","components/Layout/Logo/index.js","assets/eevee-logo.png","components/GameBoard/GameBoard.js","components/GameBoard/Card/Card.js","components/GameBoard/Card/index.js","components/Status/Status.js","components/Status/index.js","assets/pikaSpinner.svg","components/Loading/Loading.js","components/Loading/index.js","components/Scoreboard/Scoreboard.js","components/Scoreboard/index.js","components/GameOver/GameOver.js","components/GameOver/index.js","components/App/index.js","components/App/App.js","index.js"],"names":["pokedex","Pokedex","fetchCardsImgs","cards","Promise","all","map","src","resolve","img","Image","onload","shuffleCards","prevCards","r","max","length","shuffled","i","Math","floor","random","splice","getCards","quantity","start","getRandomizedInterval","MAX","getRandomizedStart","ids","id","getPokemonByName","fetchCardsWithIDS","end","push","getIDSFromInterval","CardsCollection","getCardsBriefInfo","a","brief","card","name","sprites","other","front_default","StyledLayout","styled","div","Layout","props","children","StyledHeader","header","Header","StyledMain","main","Main","StyledLogo","Logo","alt","StyledBoard","GameBoard","appear","keyframes","StyledCard","animation","css","Divider","Card","useState","toAnimate","setToAnimate","onCardClick","triggerAnimation","useEffect","timeout","setTimeout","clearTimeout","onClick","draggable","Text","h2","Status","text","spin","pulse","Modal","Loading","spinner","Score","p","BestScore","Scoreboard","score","bestScore","Button","button","GameOver","onNewGameClick","App","appLoaded","setAppLoaded","isGameOver","setIsGameOver","setTriggerAnimation","knownCards","setKnownCards","setCards","cardsCount","nr","lvl","setLvl","setScore","setBestScore","newCards","prevLvl","handleCardClick","foundSameCard","find","cardId","prevKnownCards","prev","prevScore","logoSrc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8358d697.chunk.js","sourcesContent":["import { Pokedex } from 'pokeapi-js-wrapper';\n\nconst pokedex = new Pokedex();\n\n// Pokemons Interval IDS\nconst MIN = 1;\nconst MAX = 898;\n\n// get random start between [1 - 898] (inclusive)\nconst getRandomizedStart = (quantity) =>\n  Math.floor(Math.random() * (MAX - MIN - quantity + 2)) + MIN;\n\n// get start and end interval\nconst getRandomizedInterval = (quantity, start) => [start, quantity + start];\n\n// get ids from interval\nconst getIDSFromInterval = (start, end) => {\n  let ids = [];\n\n  for (let i = start; i < end; i++) {\n    ids.push(i);\n  }\n\n  return ids;\n};\n\n// fetch cards with ids\nconst fetchCardsWithIDS = (ids) =>\n  Promise.all(ids.map((id) => pokedex.getPokemonByName(id)));\n\n// fetch src imgs\n// preload!\nconst fetchCardsImgs = (cards) =>\n  Promise.all(\n    cards.map(\n      ({ src }) =>\n        new Promise((resolve) => {\n          const img = new Image();\n          img.src = src;\n\n          img.onload = () => resolve(src);\n        })\n    )\n  );\n\n// get random number from 0 to max not included\nconst getRandomIndex = (max) => Math.floor(Math.random() * max);\n\n// shuffle the cards;\nconst shuffleCards = (prevCards) => {\n  let cards = [...prevCards];\n  const length = cards.length;\n  let shuffled = [];\n  let r;\n\n  for (let i = 0; i < length; i += 1) {\n    r = getRandomIndex(cards.length);\n    shuffled = [...shuffled, ...cards.splice(r, 1)];\n  }\n\n  return shuffled;\n};\n\n// fetch a specific amount of cards\nconst getCards = (quantity) => {\n  const [start, end] = getRandomizedInterval(\n    quantity,\n    getRandomizedStart(quantity)\n  );\n  const ids = getIDSFromInterval(start, end);\n  const cards = fetchCardsWithIDS(ids);\n\n  return cards;\n};\n\n// fetch a specific amount of cards with a brief information\n// name and img\nconst getCardsBriefInfo = async (quantity) => {\n  const cards = await getCards(quantity);\n\n  const brief = cards.map((card) => ({\n    id: card.id,\n    name: card.name,\n    src: card.sprites.other['official-artwork'].front_default\n  }));\n\n  await fetchCardsImgs(brief);\n  const shuffled = shuffleCards(brief);\n\n  return shuffled;\n};\n\nconst CardsCollection = {\n  getCardsBriefInfo,\n  shuffleCards\n};\n\nexport { CardsCollection as default };\n","import styled from 'styled-components';\n\nconst StyledLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: var(--primary);\n  color: var(--primary-text);\n`;\n\nexport default function Layout(props) {\n  return <StyledLayout>{props.children}</StyledLayout>;\n}\n","import styled from 'styled-components';\n\nconst StyledHeader = styled.header`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: center;\n  min-height: 60px;\n  padding: 10px;\n  background-color: var(--secondary);\n  border-bottom: 3px solid var(--complimentary);\n  box-shadow: inset 0px 5px 6px var(--primary);\n\n  @media (max-width: 480px) {\n    h1 {\n      font-size: 28px;\n    }\n  }\n`;\n\nexport default function Header(props) {\n  return <StyledHeader>{props.children}</StyledHeader>;\n}\n","import Header from './Header';\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst StyledMain = styled.main`\n  flex: 1 1 auto;\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 10px;\n`;\n\nexport default function Main(props) {\n  return <StyledMain>{props.children}</StyledMain>;\n}\n","import Main from './Main';\n\nexport default Main;\n","import styled from 'styled-components';\n\nconst StyledLogo = styled.div`\n  width: 80px;\n  min-width: 50px;\n`;\n\nexport default function Logo({ src, alt = 'Logo' }) {\n  return (\n    <StyledLogo>\n      <img src={src} alt={alt} />\n    </StyledLogo>\n  );\n}\n","import Logo from './Logo';\n\nexport default Logo;\n","export default __webpack_public_path__ + \"static/media/eevee-logo.d4558f95.png\";","import styled from 'styled-components';\n\nconst StyledBoard = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: flex-start;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: 10px;\n  padding: 5px;\n`;\n\nexport default function GameBoard(props) {\n  return <StyledBoard>{props.children}</StyledBoard>;\n}\n","import styled, { keyframes, css } from 'styled-components';\nimport { useState, useEffect } from 'react';\n\nconst DURATION = 400;\n\nconst appear = keyframes`\n  0% {\n    transform: scale(0);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`;\n\nconst StyledCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 5px;\n  min-width: 60px;\n  position: relative;\n\n  border-radius: 5px;\n  border: 3px solid rgb(43 56 41);\n  background-color: rgb(64 81 62);\n  box-shadow: 0px 1px 4px #585858;\n  transition: all 200ms;\n\n  overflow: hidden;\n  cursor: pointer;\n\n  ${({ animation }) =>\n    animation &&\n    css`\n      animation: ${appear} ${DURATION}ms 1;\n    `}\n\n  img {\n    width: 200px;\n    height: 200px;\n  }\n\n  h3 {\n    font-size: 24px;\n    padding: 0 5px;\n    user-select: none;\n  }\n\n  @media (min-width: 975px) {\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n\n  @media (max-width: 975px) {\n    img {\n      width: 160px;\n      height: 160px;\n    }\n  }\n\n  @media (max-width: 575px) {\n    img {\n      width: 100px;\n      height: 100px;\n    }\n\n    h3 {\n      font-size: 20px;\n    }\n  }\n\n  @media (max-width: 480px) {\n    img {\n      width: 60px;\n      height: 60px;\n    }\n\n    h3 {\n      font-size: 16px;\n    }\n  }\n`;\n\nconst Divider = styled.div`\n  width: 100%;\n  background-color: #333;\n  height: 1px;\n`;\n\nexport default function Card(props) {\n  const [toAnimate, setToAnimate] = useState();\n\n  const { card, alt = card.name, onCardClick, triggerAnimation } = props;\n  const { name, src, id } = card;\n\n  useEffect(() => {\n    setToAnimate(true);\n    const timeout = setTimeout(() => {\n      setToAnimate(false);\n    }, DURATION);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [triggerAnimation]);\n\n  return (\n    <StyledCard onClick={() => onCardClick(id)} animation={toAnimate}>\n      <img src={src} alt={alt} draggable='false' />\n      <Divider />\n      <h3>{name}</h3>\n    </StyledCard>\n  );\n}\n","import Card from './Card';\n\nexport default Card;\n","import styled from 'styled-components';\n\nconst Text = styled.h2`\n  text-decoration: underline;\n\n  @media (max-width: 480px) {\n    font-size: 18px;\n  }\n`;\n\nexport default function Status({ text }) {\n  return <Text>{text}</Text>;\n}\n","import Status from './Status';\n\nexport default Status;\n","export default __webpack_public_path__ + \"static/media/pikaSpinner.20e5d35b.svg\";","import styled, { keyframes } from 'styled-components';\nimport spinner from '../../assets/pikaSpinner.svg';\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst pulse = keyframes`\n  from {\n    transform: scale(1);\n  }\n\n  to {\n    transform: scale(1.2);\n  }\n`;\n\nconst Modal = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background: var(--primary);\n\n  img {\n    animation: ${spin} 500ms linear infinite;\n    width: 100px;\n  }\n\n  p {\n    align-text: center;\n    font-size: 28px;\n    animation: ${pulse} 500ms alternate infinite;\n  }\n\n  @media (max-width: 480px) {\n    img {\n      width: 60px;\n    }\n\n    p {\n      font-size: 20px;\n    }\n  }\n\n  z-index: 2021;\n`;\n\nexport default function Loading({ text }) {\n  return (\n    <Modal>\n      <img src={spinner} alt='spinner' />\n      {text && <p>{text}</p>}\n    </Modal>\n  );\n}\n","import Loading from './Loading';\n\nexport default Loading;\n","import styled from 'styled-components';\n\nconst StyledBoard = styled.div`\n  padding: 5px;\n  flex: 1 1 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Score = styled.p`\n  color: rgb(188 255 152);\n  padding: 5px;\n  font-size: 24px;\n\n  @media (max-width: 480px) {\n    font-size: 20px;\n  }\n`;\n\nconst BestScore = styled(Score)`\n  color: rgb(255 152 152);\n`;\n\nconst Divider = styled.div`\n  height: 24px;\n  width: 1px;\n  background-color: white;\n  margin: 0 10px;\n`;\n\nexport default function Scoreboard({ score, bestScore }) {\n  return (\n    <StyledBoard>\n      <Score>Score: {score}</Score>\n      <Divider />\n      <BestScore>Best: {bestScore}</BestScore>\n    </StyledBoard>\n  );\n}\n","import Scoreboard from './Scoreboard';\n\nexport default Scoreboard;\n","import styled from 'styled-components';\n\nconst Modal = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background: var(--primary);\n\n  p {\n    align-text: center;\n    font-size: 30px;\n  }\n\n  h2 {\n    font-size: 44px;\n  }\n\n  @media (max-width: 480px) {\n    p {\n      font-size: 20px;\n    }\n\n    h2 {\n      font-size: 28px;\n    }\n  }\n\n  z-index: 2021;\n`;\n\nconst Button = styled.button`\n  margin-top: 20px;\n  color: var(--primary-text);\n  background-color: var(--secondary);\n  font-size: 24px;\n  padding: 5px 12px;\n  border: 0;\n  cursor: pointer;\n\n  :hover {\n    background-color: rgb(70 77 90);\n  }\n\n  @media (max-width: 480px) {\n    font-size; 18px;\n  }\n`;\n\nexport default function GameOver({ score, onNewGameClick }) {\n  return (\n    <Modal>\n      <h2>Game Over!</h2>\n      <p>Congratulations your Score is {score}</p>\n      <Button onClick={onNewGameClick}>New Game</Button>\n    </Modal>\n  );\n}\n","import GameOver from './GameOver';\n\nexport default GameOver;\n","import App from './App';\n\nexport default App;\n","import { useState, useEffect } from 'react';\nimport CardsCollection from '../../lib/CardsCollection';\nimport Layout, { Header, Main } from '../Layout';\nimport logoSrc from '../../assets/eevee-logo.png';\nimport Logo from '../Layout/Logo';\nimport GameBoard, { Card } from '../GameBoard';\nimport Status from '../Status';\nimport Loading from '../Loading';\nimport Scoreboard from '../Scoreboard';\nimport GameOver from '../GameOver';\n\nexport default function App() {\n  const [appLoaded, setAppLoaded] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [triggerAnimation, setTriggerAnimation] = useState();\n  const [knownCards, setKnownCards] = useState([]);\n  const [cards, setCards] = useState();\n  const [lvl, setLvl] = useState({ cardsCount: 4, nr: 1 });\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n\n  // get cards on new lvl\n  useEffect(async () => {\n    const newCards = await CardsCollection.getCardsBriefInfo(lvl.cardsCount);\n    setCards(newCards);\n\n    // first app load\n    if (!appLoaded) {\n      setAppLoaded(true);\n    }\n  }, [lvl]);\n\n  //check player progress for next lvl\n  useEffect(() => {\n    if (knownCards.length && knownCards.length === lvl.cardsCount) {\n      setLvl((prevLvl) => {\n        let cardsCount = prevLvl.cardsCount < 12 ? prevLvl.cardsCount + 2 : 12;\n        let nr = prevLvl.nr + 1;\n\n        return { cardsCount, nr };\n      });\n\n      setKnownCards([]);\n      setCards(null);\n    }\n  }, [knownCards]);\n\n  const handleCardClick = (id) => {\n    const foundSameCard = knownCards.find((cardId) => cardId === id)\n      ? true\n      : false;\n\n    // player has memorized\n    if (!foundSameCard) {\n      setKnownCards((prevKnownCards) => {\n        let knownCards = [...prevKnownCards];\n        knownCards.push(id);\n\n        return knownCards;\n      });\n\n      setTriggerAnimation((prev) => !prev);\n      setCards((prevCards) => CardsCollection.shuffleCards(prevCards));\n\n      // update score\n      setScore((prevScore) => {\n        const score = prevScore + 1;\n\n        if (score > bestScore) {\n          setBestScore(score);\n        }\n\n        return score;\n      });\n    }\n\n    // game over\n    if (foundSameCard) {\n      setIsGameOver(true);\n    }\n  };\n\n  const handleNewGameClick = () => {\n    setIsGameOver(false);\n    setKnownCards([]);\n    setScore(0);\n    setCards(null);\n    setLvl({ cardsCount: 4, nr: 1 });\n  };\n\n  return (\n    <Layout>\n      <Header>\n        <Logo src={logoSrc} />\n        <h1>PokeMemory!</h1>\n        <Scoreboard score={score} bestScore={bestScore} />\n      </Header>\n      {!appLoaded && <Loading text='Loading..' />}\n      {isGameOver && (\n        <GameOver score={score} onNewGameClick={handleNewGameClick} />\n      )}\n      <Main>\n        <Status text={`Choose your next Pokemon! Lvl ${lvl.nr}`} />\n        <GameBoard>\n          {cards\n            ? cards.map((card) => (\n                <Card\n                  key={card.id}\n                  card={card}\n                  onCardClick={handleCardClick}\n                  triggerAnimation={triggerAnimation}\n                />\n              ))\n            : appLoaded && <Loading text={`Loading Lvl ${lvl.nr}`} />}\n        </GameBoard>\n      </Main>\n    </Layout>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}